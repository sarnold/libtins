[tox]
envlist = tests
skip_missing_interpreters = true
skipsdist = true

[testenv]
skip_install = true
install_command = pip install {opts} {packages}
#basepython= python3.9

[testenv:tests]
setenv =
    CFLAGS = -march=native -O2 -g -DNDEBUG
    CXXFLAGS = {env:CFLAGS:-march=native -O2 -g -DNDEBUG}
    LDFLAGS = {env:CFLAGS:-march=native -O2 -g -DNDEBUG -Wl,-O1 -Wl,--as-needed}
    PREFIX = {env:PREFIX:{envdir}}

passenv =
    CC
    CXX
    LD
    AR
    NM
    RANLIB
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    XDG_*
    GITHUB*
    PIP_DOWNLOAD_CACHE

deps =
    pip>=22.1
    cmake
    ninja

commands =
    cmake -G {posargs:"Unix Makefiles"} -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBTINS_BUILD_TESTS=ON
    cmake --build build -j4 --target tests
    ctest -V --test-dir build/

[testenv:tools]
envdir = {toxworkdir}/tools

allowlist_externals =
    bash

deps =
    {[testenv:tests]deps}

setenv =
    {[testenv:tests]setenv}

passenv =
    {[testenv:tests]passenv}

commands =
    cmake -G {posargs:"Unix Makefiles"} -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX={env:PREFIX} -DLIBTINS_ENABLE_CXX11=ON -DLIBTINS_ENABLE_ACK_TRACKER=OFF -DLIBTINS_ENABLE_WPA2=OFF -DLIBTINS_ENABLE_DOT11=OFF -DLIBTINS_BUILD_TESTS=OFF
    cmake --build build -j4 --target install
    bash -c 'tree -L 2 -d $PREFIX/'

[testenv:clean]
skip_install = true
allowlist_externals =
    {[testenv:tools]allowlist_externals}

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf build/'

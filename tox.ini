[tox]
envlist = py3{8,9,10,11}-tests
skip_missing_interpreters = true
skipsdist = true

[testenv]
envdir = {toxinidir}/.env
skip_install = true

passenv =
    CC
    CXX
    LD
    AR
    NM
    RANLIB
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    XDG_*
    GITHUB*
    PIP_DOWNLOAD_CACHE

setenv =
    PREFIX={env:PREFIX:{toxinidir}/staging}

allowlist_externals =
    {build,ctest,clean}: bash

deps =
    {build,ctest}: pip>=21.1
    {build,ctest}: cmake
    {build,ctest}: ninja

commands =
    build: cmake -G {posargs:"Unix Makefiles"} -S . -B build -DLIBTINS_ENABLE_CXX11=ON -DLIBTINS_ENABLE_ACK_TRACKER=OFF -DLIBTINS_ENABLE_WPA2=OFF -DLIBTINS_ENABLE_DOT11=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX={env:PREFIX}
    build: cmake --build build --target install --parallel 4
    build: cmake --build build --target tests --parallel 4
    build: ctest -V --test-dir build/
    # sadly tests are not built using ctest --build-and-test  :/
    #ctest: ctest --build-generator {posargs:"Ninja"} --build-and-test . build --target test --parallel 4 --build-options --test-command ctest -V --timeout 5
    ctest: ctest --build-config Debug --parallel 4 --build-generator {posargs:"Ninja"} --build-and-test . build --build-options -DLIBTINS_ENABLE_CXX11=ON -DCMAKE_INSTALL_PREFIX:PATH={env:PREFIX} --test-command ctest -V --build-config Debug
    build: bash -c 'ls -lh $PREFIX/*'
    clean: bash -c 'rm -rf $PREFIX/ build/'
